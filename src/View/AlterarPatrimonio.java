/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package View;

import Model.Bean.Computador;
import Model.Bean.Patrimonio;
import Model.Bean.Setor;
import Model.Bean.User;
import Model.DAO.CadastroDAO;
import java.awt.Color;
import java.awt.Dimension;
import java.awt.event.KeyEvent;
import javax.swing.JOptionPane;

/**
 *
 * @author Leandro Melo
 * 
 * Esta tela está em fase de construção, apresenta apenas algumas funcionalidades
 * básicas. Ainda falta implementar a regra de alteração do patrimônio. Serve
 * apenas para verificar se tudo está sendo carregado corretamente.
 * 
 */
public class AlterarPatrimonio extends javax.swing.JInternalFrame {

    /**
     * Creates new form CadastroCliente
     */
    public AlterarPatrimonio() {
        initComponents();

        cbPc.setEnabled(true);
        /*campo_processador.setEnabled(false);
        campo_hd.setEnabled(false);
        campo_memoria.setEnabled(false);
        cbSsd.setEnabled(false);
        label_setor.setForeground(Color.red);
        label_tombamento.setForeground(Color.red);
        label_descricao.setForeground(Color.red);
        label_processador.setForeground(Color.gray);
        label_hd.setForeground(Color.gray);
        label_memoria.setForeground(Color.gray);
        label_ssd.setForeground(Color.gray);*/
        
        CadastroDAO setores = new CadastroDAO();
        setores.readSetor().forEach((s) -> {
            cbSetores.addItem(s);
        });
    }

    public void setPosicao() {
        Dimension d = this.getDesktopPane().getSize();
        this.setLocation((d.width - this.getSize().width) / 2, (d.height - this.getSize().height) / 2);
    }
    
    /*
      Essa função peguei da internet, 
      no site: https://www.guj.com.br/t/verificar-se-na-string-so-e-numerico-resolvido/117809/5
      Usuário: ViniGodoy. Em 31/07/2020
    */
    public boolean soTemNumeros(String numTombamento) {
        for (int i = 0; i < numTombamento.length(); i++) {
            if (!Character.isDigit(numTombamento.charAt(i))) {
                return false;
            }
        }
        return true;
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        container = new javax.swing.JPanel();
        campo_hd = new javax.swing.JTextField();
        label_descricao = new javax.swing.JLabel();
        campo_descricao = new javax.swing.JTextField();
        label_setor = new javax.swing.JLabel();
        label_hd = new javax.swing.JLabel();
        label_memoria = new javax.swing.JLabel();
        campo_memoria = new javax.swing.JTextField();
        label_ssd = new javax.swing.JLabel();
        label_tombamento = new javax.swing.JLabel();
        campo_numTombamento = new javax.swing.JTextField();
        cbSetores = new javax.swing.JComboBox<>();
        cbSsd = new javax.swing.JCheckBox();
        label_gb1 = new javax.swing.JLabel();
        label_gb2 = new javax.swing.JLabel();
        label_observacao = new javax.swing.JLabel();
        campo_observacao = new javax.swing.JTextField();
        label_marca = new javax.swing.JLabel();
        campo_marca = new javax.swing.JTextField();
        label_pc = new javax.swing.JLabel();
        cbPc = new javax.swing.JCheckBox();
        label_processador = new javax.swing.JLabel();
        campo_processador = new javax.swing.JTextField();
        label_titulo = new javax.swing.JLabel();
        botao_salvar = new javax.swing.JButton();
        botao_limpar = new javax.swing.JButton();
        botao_cancelar = new javax.swing.JButton();

        setClosable(true);
        setIconifiable(true);
        setMaximizable(true);
        setResizable(true);
        setTitle("CADASTRO DE PATRIMÔNIO");
        setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));

        container.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED, null, new java.awt.Color(0, 0, 0), null, null));

        campo_hd.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        campo_hd.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        campo_hd.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                campo_hdFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                campo_hdFocusLost(evt);
            }
        });
        campo_hd.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                campo_hdKeyPressed(evt);
            }
        });

        label_descricao.setFont(new java.awt.Font("Helvetica", 1, 18)); // NOI18N
        label_descricao.setText("Descrição do Material:");

        campo_descricao.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                campo_descricaoFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                campo_descricaoFocusLost(evt);
            }
        });
        campo_descricao.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                campo_descricaoKeyPressed(evt);
            }
        });

        label_setor.setFont(new java.awt.Font("Helvetica", 1, 18)); // NOI18N
        label_setor.setText("Setor:");

        label_hd.setFont(new java.awt.Font("Helvetica", 1, 18)); // NOI18N
        label_hd.setText("HD:");

        label_memoria.setFont(new java.awt.Font("Helvetica", 1, 18)); // NOI18N
        label_memoria.setText("Memória:");

        campo_memoria.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        campo_memoria.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                campo_memoriaFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                campo_memoriaFocusLost(evt);
            }
        });
        campo_memoria.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                campo_memoriaKeyPressed(evt);
            }
        });

        label_ssd.setFont(new java.awt.Font("Helvetica", 1, 18)); // NOI18N
        label_ssd.setText("SSD:");

        label_tombamento.setFont(new java.awt.Font("Helvetica", 1, 18)); // NOI18N
        label_tombamento.setText("Nº Tombamento:");

        campo_numTombamento.setText("00000");
        campo_numTombamento.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                campo_numTombamentoFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                campo_numTombamentoFocusLost(evt);
            }
        });
        campo_numTombamento.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                campo_numTombamentoKeyPressed(evt);
            }
        });

        cbSetores.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "ESCOLHA UM SETOR" }));
        cbSetores.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                cbSetoresFocusLost(evt);
            }
        });

        cbSsd.setText("SIM");

        label_gb1.setFont(new java.awt.Font("Helvetica", 1, 12)); // NOI18N
        label_gb1.setText("GB");

        label_gb2.setFont(new java.awt.Font("Helvetica", 1, 12)); // NOI18N
        label_gb2.setText("GB");
        label_gb2.setToolTipText("");

        label_observacao.setFont(new java.awt.Font("Helvetica", 1, 18)); // NOI18N
        label_observacao.setText("Observação:");

        campo_observacao.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                campo_observacaoFocusGained(evt);
            }
        });
        campo_observacao.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                campo_observacaoKeyPressed(evt);
            }
        });

        label_marca.setFont(new java.awt.Font("Helvetica", 1, 18)); // NOI18N
        label_marca.setText("Marca:");

        campo_marca.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                campo_marcaFocusGained(evt);
            }
        });
        campo_marca.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                campo_marcaKeyPressed(evt);
            }
        });

        label_pc.setFont(new java.awt.Font("Helvetica", 1, 18)); // NOI18N
        label_pc.setText("É um PC:");

        cbPc.setText("SIM");
        cbPc.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                cbPcStateChanged(evt);
            }
        });

        label_processador.setFont(new java.awt.Font("Helvetica", 1, 18)); // NOI18N
        label_processador.setText("Processador:");

        campo_processador.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                campo_processadorFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                campo_processadorFocusLost(evt);
            }
        });
        campo_processador.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                campo_processadorKeyPressed(evt);
            }
        });

        javax.swing.GroupLayout containerLayout = new javax.swing.GroupLayout(container);
        container.setLayout(containerLayout);
        containerLayout.setHorizontalGroup(
            containerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(containerLayout.createSequentialGroup()
                .addGap(21, 21, 21)
                .addGroup(containerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(label_setor, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(containerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addGroup(containerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(campo_observacao)
                            .addComponent(label_observacao, javax.swing.GroupLayout.PREFERRED_SIZE, 500, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(containerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(campo_descricao)
                            .addComponent(label_descricao, javax.swing.GroupLayout.DEFAULT_SIZE, 500, Short.MAX_VALUE))
                        .addGroup(containerLayout.createSequentialGroup()
                            .addGroup(containerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addComponent(campo_processador, javax.swing.GroupLayout.PREFERRED_SIZE, 276, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(label_processador, javax.swing.GroupLayout.PREFERRED_SIZE, 276, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGap(45, 45, 45)
                            .addGroup(containerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(containerLayout.createSequentialGroup()
                                    .addComponent(campo_hd, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(label_gb1))
                                .addComponent(label_hd))
                            .addGap(18, 18, 18)
                            .addGroup(containerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(containerLayout.createSequentialGroup()
                                    .addComponent(campo_memoria, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(label_gb2))
                                .addComponent(label_memoria))
                            .addGap(12, 12, 12)))
                    .addComponent(cbSetores, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(32, 32, 32)
                .addGroup(containerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(containerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, containerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(label_marca, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(campo_numTombamento, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(label_tombamento, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(campo_marca))
                        .addComponent(label_pc, javax.swing.GroupLayout.PREFERRED_SIZE, 144, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(cbPc)
                    .addComponent(label_ssd)
                    .addComponent(cbSsd))
                .addContainerGap(20, Short.MAX_VALUE))
        );
        containerLayout.setVerticalGroup(
            containerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(containerLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(containerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(containerLayout.createSequentialGroup()
                        .addGroup(containerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(label_setor, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(label_tombamento))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(containerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(cbSetores, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(campo_numTombamento, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(containerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(containerLayout.createSequentialGroup()
                                .addComponent(label_descricao)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(campo_descricao, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(containerLayout.createSequentialGroup()
                                .addComponent(label_marca)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(campo_marca, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(18, 18, 18)
                        .addComponent(label_observacao)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(campo_observacao, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(containerLayout.createSequentialGroup()
                        .addComponent(label_pc)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(cbPc)))
                .addGap(85, 85, 85)
                .addGroup(containerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(containerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addGroup(containerLayout.createSequentialGroup()
                            .addComponent(label_gb1, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(1, 1, 1))
                        .addGroup(containerLayout.createSequentialGroup()
                            .addGroup(containerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(label_ssd)
                                .addComponent(label_memoria))
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addGroup(containerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(label_gb2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGroup(containerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(campo_memoria, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(cbSsd)))))
                    .addGroup(containerLayout.createSequentialGroup()
                        .addGroup(containerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(label_processador)
                            .addComponent(label_hd))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(containerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(campo_processador, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(campo_hd))))
                .addContainerGap(22, Short.MAX_VALUE))
        );

        label_titulo.setFont(new java.awt.Font("Century Gothic", 1, 48)); // NOI18N
        label_titulo.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        label_titulo.setText("Alterar Patrimônio");

        botao_salvar.setText("Salvar");
        botao_salvar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botao_salvarActionPerformed(evt);
            }
        });

        botao_limpar.setText("Limpar");
        botao_limpar.setEnabled(false);
        botao_limpar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botao_limparActionPerformed(evt);
            }
        });

        botao_cancelar.setText("Cancelar");
        botao_cancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botao_cancelarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(91, 91, 91)
                .addComponent(botao_salvar)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(botao_limpar)
                .addGap(182, 182, 182)
                .addComponent(botao_cancelar)
                .addGap(88, 88, 88))
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(label_titulo, javax.swing.GroupLayout.PREFERRED_SIZE, 722, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(container, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(label_titulo, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(container, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(botao_salvar)
                    .addComponent(botao_limpar)
                    .addComponent(botao_cancelar))
                .addContainerGap(36, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void botao_salvarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botao_salvarActionPerformed
        ConsultaPatrimonio consuPatri = new ConsultaPatrimonio();
        consuPatri.setVisible(true);
        
      //  
        
        if (!soTemNumeros(campo_numTombamento.getText())) {
            label_tombamento.setForeground(Color.red);
            JOptionPane.showMessageDialog(this, "POR FAVOR DIGITE APENAS NÚMEROS \n"
                                              + "NO CAMPO Nº Tombamento");
            campo_numTombamento.requestFocus();
        } else if (campo_numTombamento.getText().length() != 5) {
            label_tombamento.setForeground(Color.red);
            JOptionPane.showMessageDialog(this, "Nº DE TOMBAMENTO INCORRETO!\n"
                                              + "POR FAVOR INFORME UM NÚMERO COM 5 DÍGITOS");
            campo_numTombamento.requestFocus();
        } else if (campo_numTombamento.getText().equalsIgnoreCase("00000")){
            label_tombamento.setForeground(Color.red);
            JOptionPane.showMessageDialog(this, "NÚMERO DE TOMBAMENTO NÃO PERMITIDO!!!");
            campo_numTombamento.requestFocus();
        } else {  
            Setor setor = (Setor) cbSetores.getSelectedItem();
                
                    Patrimonio patrimonio = new Patrimonio();
                    patrimonio.setNumTombamento(campo_numTombamento.getText());
                    patrimonio.setDescricao(campo_descricao.getText().toUpperCase());
                    patrimonio.setMarca(campo_marca.getText().toUpperCase());
                    patrimonio.setObservacao(campo_observacao.getText().toUpperCase());
                    //patrimonio.setComputador(computador);
                    setor.setId(CadastroDAO.readIdSetor(setor));
                    patrimonio.setSetor(setor);

                    CadastroDAO.updatePatrimonio(patrimonio);

                    JOptionPane.showMessageDialog(this, "Patrimônio alterado com sucesso!!", "Sucesso", JOptionPane.INFORMATION_MESSAGE);
                    this.dispose();
           /* if (cbPc.isSelected()) {
                if((cbSetores.getSelectedIndex() == 0)) {
                    label_setor.setForeground(Color.red);
                    JOptionPane.showMessageDialog(this, "SELECIONE UM SETOR PARA CONTINUAR");
                    cbSetores.requestFocus();
                } else if (campo_descricao.getText().isEmpty()) {
                    label_descricao.setForeground(Color.red);
                    JOptionPane.showMessageDialog(this, "INFORME UMA DESCRIÇÃO PARA O MATERIAL");
                    campo_descricao.requestFocus();
                } else {
                  
                    
                }*/
        }
            
        TelaPrincipal.jDesktopPane.add(consuPatri);
        consuPatri.setPosicao();
        
    }//GEN-LAST:event_botao_salvarActionPerformed

    private void botao_limparActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botao_limparActionPerformed
        cbSetores.setSelectedIndex(0);
        campo_numTombamento.setText("00000");
        campo_descricao.setText("");
        campo_marca.setText("");
        campo_observacao.setText("");
        cbPc.setSelected(false);
        campo_processador.setText("");
        campo_hd.setText("");
        campo_memoria.setText("");
        cbSsd.setSelected(false);
        label_setor.setForeground(Color.red);
        label_tombamento.setForeground(Color.red);
        label_descricao.setForeground(Color.red);
        campo_numTombamento.requestFocus();
    }//GEN-LAST:event_botao_limparActionPerformed

    private void botao_cancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botao_cancelarActionPerformed
        ConsultaPatrimonio consuPatri = new ConsultaPatrimonio();
        consuPatri.setVisible(true);
        TelaPrincipal.jDesktopPane.add(consuPatri);
        consuPatri.setPosicao();
        
        this.dispose();
    }//GEN-LAST:event_botao_cancelarActionPerformed

    private void campo_hdFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_campo_hdFocusGained
        campo_hd.selectAll();
    }//GEN-LAST:event_campo_hdFocusGained

    private void campo_hdKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_campo_hdKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            campo_memoria.requestFocus();
        }
    }//GEN-LAST:event_campo_hdKeyPressed

    private void campo_descricaoFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_campo_descricaoFocusGained
        campo_descricao.selectAll();
    }//GEN-LAST:event_campo_descricaoFocusGained

    private void campo_descricaoKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_campo_descricaoKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            campo_marca.requestFocus();
        }
    }//GEN-LAST:event_campo_descricaoKeyPressed

    private void campo_memoriaFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_campo_memoriaFocusGained
        campo_memoria.selectAll();
    }//GEN-LAST:event_campo_memoriaFocusGained

    private void campo_memoriaKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_campo_memoriaKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            botao_salvar.requestFocus();
        }
    }//GEN-LAST:event_campo_memoriaKeyPressed

    private void campo_numTombamentoKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_campo_numTombamentoKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            campo_descricao.requestFocus();
        }
    }//GEN-LAST:event_campo_numTombamentoKeyPressed

    private void campo_numTombamentoFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_campo_numTombamentoFocusGained
        campo_numTombamento.selectAll();
    }//GEN-LAST:event_campo_numTombamentoFocusGained

    private void campo_observacaoFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_campo_observacaoFocusGained
        campo_observacao.selectAll();
    }//GEN-LAST:event_campo_observacaoFocusGained

    private void campo_observacaoKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_campo_observacaoKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            cbPc.requestFocus();
        }
    }//GEN-LAST:event_campo_observacaoKeyPressed

    private void campo_marcaFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_campo_marcaFocusGained
        campo_marca.selectAll();
    }//GEN-LAST:event_campo_marcaFocusGained

    private void campo_marcaKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_campo_marcaKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            campo_observacao.requestFocus();
        }
    }//GEN-LAST:event_campo_marcaKeyPressed

    private void campo_processadorFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_campo_processadorFocusGained
        campo_processador.selectAll();
    }//GEN-LAST:event_campo_processadorFocusGained

    private void campo_processadorKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_campo_processadorKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            campo_hd.requestFocus();
        }
    }//GEN-LAST:event_campo_processadorKeyPressed

    private void cbPcStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_cbPcStateChanged
        if (cbPc.isSelected()) {
            campo_processador.setEnabled(true);
            campo_hd.setEnabled(true);
            campo_memoria.setEnabled(true);
            cbSsd.setEnabled(true);
            label_processador.setForeground(Color.black);
            label_hd.setForeground(Color.black);
            label_memoria.setForeground(Color.black);
            label_ssd.setForeground(Color.black);
        } else {// TODO: verificar uso do código e se preciso remover ação
            campo_processador.setEnabled(false);
            campo_hd.setEnabled(false);
            campo_memoria.setEnabled(false);
            cbSsd.setEnabled(false);
            label_processador.setForeground(Color.gray);
            label_hd.setForeground(Color.gray);
            label_memoria.setForeground(Color.gray);
            label_ssd.setForeground(Color.gray);
            //campo_processador.setText("");
            //campo_hd.setText("");
            //campo_memoria.setText("");
            //cbSsd.setSelected(false);
        }
    }//GEN-LAST:event_cbPcStateChanged

    private void campo_numTombamentoFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_campo_numTombamentoFocusLost
        if ((soTemNumeros(campo_numTombamento.getText())) && (!campo_numTombamento.getText().equalsIgnoreCase("00000")) && (campo_numTombamento.getText().length() == 5)){
            label_tombamento.setForeground(Color.black);
        } else {
            label_tombamento.setForeground(Color.red);
        }
    }//GEN-LAST:event_campo_numTombamentoFocusLost

    private void cbSetoresFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_cbSetoresFocusLost
        if (cbSetores.getSelectedIndex() == 0){
            label_setor.setForeground(Color.red);
        } else {
            label_setor.setForeground(Color.black);
        }
    }//GEN-LAST:event_cbSetoresFocusLost

    private void campo_descricaoFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_campo_descricaoFocusLost
        if (campo_descricao.getText().isEmpty()) {
            label_descricao.setForeground(Color.red);
        } else {
            label_descricao.setForeground(Color.black);
        }
    }//GEN-LAST:event_campo_descricaoFocusLost

    private void campo_processadorFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_campo_processadorFocusLost
        if (campo_processador.getText().isEmpty()) {
            label_processador.setForeground(Color.red);
        } else {
            label_processador.setForeground(Color.black);
        }
    }//GEN-LAST:event_campo_processadorFocusLost

    private void campo_hdFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_campo_hdFocusLost
        if (campo_hd.getText().isEmpty()) {
            label_hd.setForeground(Color.red);
        } else if (!soTemNumeros(campo_hd.getText())) {
            label_hd.setForeground(Color.red);
            JOptionPane.showMessageDialog(this, "POR FAVOR DIGITE APENAS NÚMEROS \n"
                                              + "NO CAMPO HD", "ATENÇÃO", JOptionPane.WARNING_MESSAGE);
            campo_hd.requestFocus();
        } else {
            label_hd.setForeground(Color.black);
        }
    }//GEN-LAST:event_campo_hdFocusLost

    private void campo_memoriaFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_campo_memoriaFocusLost
        if (campo_memoria.getText().isEmpty()) {
            label_memoria.setForeground(Color.red);
        } else if (!soTemNumeros(campo_memoria.getText())) {
            label_memoria.setForeground(Color.red);
            JOptionPane.showMessageDialog(this, "POR FAVOR DIGITE APENAS NÚMEROS \n"
                                              + "NO CAMPO MEMÓRIA", "ATENÇÃO", JOptionPane.WARNING_MESSAGE);
            campo_memoria.requestFocus();
        } else {
            label_memoria.setForeground(Color.black);
        }
    }//GEN-LAST:event_campo_memoriaFocusLost

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton botao_cancelar;
    private javax.swing.JButton botao_limpar;
    private javax.swing.JButton botao_salvar;
    protected static javax.swing.JTextField campo_descricao;
    protected static javax.swing.JTextField campo_hd;
    protected static javax.swing.JTextField campo_marca;
    protected static javax.swing.JTextField campo_memoria;
    protected static javax.swing.JTextField campo_numTombamento;
    protected static javax.swing.JTextField campo_observacao;
    protected static javax.swing.JTextField campo_processador;
    protected static javax.swing.JCheckBox cbPc;
    protected static javax.swing.JComboBox<Object> cbSetores;
    protected static javax.swing.JCheckBox cbSsd;
    private javax.swing.JPanel container;
    private javax.swing.JLabel label_descricao;
    private javax.swing.JLabel label_gb1;
    private javax.swing.JLabel label_gb2;
    private javax.swing.JLabel label_hd;
    private javax.swing.JLabel label_marca;
    private javax.swing.JLabel label_memoria;
    private javax.swing.JLabel label_observacao;
    private javax.swing.JLabel label_pc;
    private javax.swing.JLabel label_processador;
    private javax.swing.JLabel label_setor;
    private javax.swing.JLabel label_ssd;
    private javax.swing.JLabel label_titulo;
    private javax.swing.JLabel label_tombamento;
    // End of variables declaration//GEN-END:variables
}